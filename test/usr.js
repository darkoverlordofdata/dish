// Generated by CoffeeScript 1.10.0

/*
## Foreign function interface
 */
var HEAP, HEAP_SIZE, Usr, allocator, buffer;

HEAP_SIZE = 0x40000;

buffer = new ArrayBuffer(HEAP_SIZE);

Usr = (function() {
  function Usr() {}

  Usr.now = function() {
    return performance.now();
  };


  /*
   * malloc
   *
   * @param nBytes number of bytes required
   * @returns starting offset in the heap
   */

  Usr.malloc = function(nBytes) {
    var offset;
    if (typeof malloc !== "undefined" && malloc !== null) {
      return allocator.alloc(nBytes);
    } else {

      /*
      * Fallback:
      * this is a naive implementation of malloc. 
      * memory is only allocated, never freed.
       */
      offset = HEAP[0];
      HEAP[0] = offset + nBytes;
      return offset;
    }
  };

  Usr.free = function(addr) {
    if (typeof malloc !== "undefined" && malloc !== null) {
      return allocator.free(addr);
    }
  };

  return Usr;

})();

if (typeof malloc !== "undefined" && malloc !== null) {
  allocator = new malloc.Allocator(buffer);
} else {
  HEAP = new Int32Array(buffer);
  HEAP[0] = 16;
}
